// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module axil_conv2D0_axil_conv2D0_Pipeline_loop_k1_loop_k2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        acc_V,
        zext_ln23,
        zext_ln27,
        weights_address0,
        weights_ce0,
        weights_q0,
        img_in_address0,
        img_in_ce0,
        img_in_q0,
        acc_V_2_out,
        acc_V_2_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [20:0] acc_V;
input  [1:0] zext_ln23;
input  [1:0] zext_ln27;
output  [3:0] weights_address0;
output   weights_ce0;
input  [7:0] weights_q0;
output  [5:0] img_in_address0;
output   img_in_ce0;
input  [7:0] img_in_q0;
output  [20:0] acc_V_2_out;
output   acc_V_2_out_ap_vld;

reg ap_idle;
reg weights_ce0;
reg img_in_ce0;
reg acc_V_2_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1072_fu_229_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln1072_reg_458;
reg   [0:0] icmp_ln1072_reg_458_pp0_iter1_reg;
reg   [0:0] icmp_ln1072_reg_458_pp0_iter2_reg;
reg   [0:0] icmp_ln1072_reg_458_pp0_iter3_reg;
wire   [3:0] weight_1d_loc_fu_350_p2;
reg   [3:0] weight_1d_loc_reg_462;
wire   [5:0] image_1d_loc_fu_366_p2;
reg   [5:0] image_1d_loc_reg_467;
wire   [63:0] zext_ln587_fu_393_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln587_1_fu_397_p1;
reg   [20:0] acc_V_1_fu_74;
wire  signed [20:0] grp_fu_420_p3;
reg  signed [20:0] ap_sig_allocacmp_acc_V_1_load_1;
wire    ap_loop_init;
reg   [1:0] kcol_V_fu_78;
wire   [1:0] add_ln885_2_fu_372_p2;
reg   [1:0] ap_sig_allocacmp_kcol_V_load;
reg   [1:0] krow_V_fu_82;
wire   [1:0] select_ln1072_fu_334_p3;
reg   [1:0] ap_sig_allocacmp_krow_V_1;
reg   [3:0] indvar_flatten_fu_86;
wire   [3:0] add_ln1072_fu_235_p2;
reg   [3:0] ap_sig_allocacmp_indvar_flatten_load;
wire    ap_block_pp0_stage0_01001;
wire   [3:0] shl_ln_fu_183_p3;
wire   [3:0] zext_ln70_1_fu_179_p1;
wire   [2:0] zext_ln70_fu_175_p1;
wire   [2:0] zext_ln23_cast_fu_145_p1;
wire   [2:0] add_ln70_fu_197_p2;
wire   [3:0] shl_ln70_2_fu_211_p3;
wire   [5:0] shl_ln70_1_fu_203_p3;
wire   [5:0] zext_ln70_2_fu_219_p1;
wire   [0:0] icmp_ln1072_1_fu_244_p2;
wire   [1:0] add_ln885_fu_258_p2;
wire   [3:0] shl_ln70_mid1_fu_272_p3;
wire   [3:0] zext_ln70_4_fu_268_p1;
wire   [3:0] sub_ln70_2_fu_280_p2;
wire   [3:0] sub_ln70_fu_191_p2;
wire   [2:0] zext_ln70_3_fu_264_p1;
wire   [2:0] add_ln70_1_fu_294_p2;
wire   [3:0] shl_ln70_2_mid1_fu_308_p3;
wire   [5:0] shl_ln70_1_mid1_fu_300_p3;
wire   [5:0] zext_ln70_8_fu_316_p1;
wire   [5:0] sub_ln70_3_fu_320_p2;
wire   [5:0] sub_ln70_1_fu_223_p2;
wire   [1:0] select_ln27_fu_250_p3;
wire   [3:0] zext_ln70_6_fu_346_p1;
wire   [3:0] select_ln27_1_fu_286_p3;
wire   [2:0] zext_ln27_cast_fu_141_p1;
wire   [2:0] zext_ln70_5_fu_342_p1;
wire   [2:0] add_ln70_2_fu_356_p2;
wire   [5:0] zext_ln70_7_fu_362_p1;
wire   [5:0] select_ln27_2_fu_326_p3;
wire   [7:0] grp_fu_420_p0;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [15:0] grp_fu_420_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_done_reg = 1'b0;
end

axil_conv2D0_mac_muladd_8ns_8s_21s_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
mac_muladd_8ns_8s_21s_21_4_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_420_p0),
    .din1(weights_q0),
    .din2(ap_sig_allocacmp_acc_V_1_load_1),
    .ce(1'b1),
    .dout(grp_fu_420_p3)
);

axil_conv2D0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            acc_V_1_fu_74 <= acc_V;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            acc_V_1_fu_74 <= grp_fu_420_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1072_fu_229_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_86 <= add_ln1072_fu_235_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_86 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1072_fu_229_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            kcol_V_fu_78 <= add_ln885_2_fu_372_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            kcol_V_fu_78 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1072_fu_229_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            krow_V_fu_82 <= select_ln1072_fu_334_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            krow_V_fu_82 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln1072_reg_458 <= icmp_ln1072_fu_229_p2;
        icmp_ln1072_reg_458_pp0_iter1_reg <= icmp_ln1072_reg_458;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        icmp_ln1072_reg_458_pp0_iter2_reg <= icmp_ln1072_reg_458_pp0_iter1_reg;
        icmp_ln1072_reg_458_pp0_iter3_reg <= icmp_ln1072_reg_458_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1072_fu_229_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_1d_loc_reg_467 <= image_1d_loc_fu_366_p2;
        weight_1d_loc_reg_462 <= weight_1d_loc_fu_350_p2;
    end
end

always @ (*) begin
    if (((icmp_ln1072_reg_458_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_V_2_out_ap_vld = 1'b1;
    end else begin
        acc_V_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1072_fu_229_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        ap_sig_allocacmp_acc_V_1_load_1 = grp_fu_420_p3;
    end else begin
        ap_sig_allocacmp_acc_V_1_load_1 = acc_V_1_fu_74;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 4'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_86;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_kcol_V_load = 2'd0;
    end else begin
        ap_sig_allocacmp_kcol_V_load = kcol_V_fu_78;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_krow_V_1 = 2'd0;
    end else begin
        ap_sig_allocacmp_krow_V_1 = krow_V_fu_82;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        img_in_ce0 = 1'b1;
    end else begin
        img_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_ce0 = 1'b1;
    end else begin
        weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_V_2_out = acc_V_1_fu_74;

assign add_ln1072_fu_235_p2 = (ap_sig_allocacmp_indvar_flatten_load + 4'd1);

assign add_ln70_1_fu_294_p2 = (zext_ln70_3_fu_264_p1 + zext_ln23_cast_fu_145_p1);

assign add_ln70_2_fu_356_p2 = (zext_ln27_cast_fu_141_p1 + zext_ln70_5_fu_342_p1);

assign add_ln70_fu_197_p2 = (zext_ln70_fu_175_p1 + zext_ln23_cast_fu_145_p1);

assign add_ln885_2_fu_372_p2 = (select_ln27_fu_250_p3 + 2'd1);

assign add_ln885_fu_258_p2 = (ap_sig_allocacmp_krow_V_1 + 2'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_420_p0 = grp_fu_420_p00;

assign grp_fu_420_p00 = img_in_q0;

assign icmp_ln1072_1_fu_244_p2 = ((ap_sig_allocacmp_kcol_V_load == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln1072_fu_229_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 4'd9) ? 1'b1 : 1'b0);

assign image_1d_loc_fu_366_p2 = (zext_ln70_7_fu_362_p1 + select_ln27_2_fu_326_p3);

assign img_in_address0 = zext_ln587_1_fu_397_p1;

assign select_ln1072_fu_334_p3 = ((icmp_ln1072_1_fu_244_p2[0:0] == 1'b1) ? add_ln885_fu_258_p2 : ap_sig_allocacmp_krow_V_1);

assign select_ln27_1_fu_286_p3 = ((icmp_ln1072_1_fu_244_p2[0:0] == 1'b1) ? sub_ln70_2_fu_280_p2 : sub_ln70_fu_191_p2);

assign select_ln27_2_fu_326_p3 = ((icmp_ln1072_1_fu_244_p2[0:0] == 1'b1) ? sub_ln70_3_fu_320_p2 : sub_ln70_1_fu_223_p2);

assign select_ln27_fu_250_p3 = ((icmp_ln1072_1_fu_244_p2[0:0] == 1'b1) ? 2'd0 : ap_sig_allocacmp_kcol_V_load);

assign shl_ln70_1_fu_203_p3 = {{add_ln70_fu_197_p2}, {3'd0}};

assign shl_ln70_1_mid1_fu_300_p3 = {{add_ln70_1_fu_294_p2}, {3'd0}};

assign shl_ln70_2_fu_211_p3 = {{add_ln70_fu_197_p2}, {1'd0}};

assign shl_ln70_2_mid1_fu_308_p3 = {{add_ln70_1_fu_294_p2}, {1'd0}};

assign shl_ln70_mid1_fu_272_p3 = {{add_ln885_fu_258_p2}, {2'd0}};

assign shl_ln_fu_183_p3 = {{ap_sig_allocacmp_krow_V_1}, {2'd0}};

assign sub_ln70_1_fu_223_p2 = (shl_ln70_1_fu_203_p3 - zext_ln70_2_fu_219_p1);

assign sub_ln70_2_fu_280_p2 = (shl_ln70_mid1_fu_272_p3 - zext_ln70_4_fu_268_p1);

assign sub_ln70_3_fu_320_p2 = (shl_ln70_1_mid1_fu_300_p3 - zext_ln70_8_fu_316_p1);

assign sub_ln70_fu_191_p2 = (shl_ln_fu_183_p3 - zext_ln70_1_fu_179_p1);

assign weight_1d_loc_fu_350_p2 = (zext_ln70_6_fu_346_p1 + select_ln27_1_fu_286_p3);

assign weights_address0 = zext_ln587_fu_393_p1;

assign zext_ln23_cast_fu_145_p1 = zext_ln23;

assign zext_ln27_cast_fu_141_p1 = zext_ln27;

assign zext_ln587_1_fu_397_p1 = image_1d_loc_reg_467;

assign zext_ln587_fu_393_p1 = weight_1d_loc_reg_462;

assign zext_ln70_1_fu_179_p1 = ap_sig_allocacmp_krow_V_1;

assign zext_ln70_2_fu_219_p1 = shl_ln70_2_fu_211_p3;

assign zext_ln70_3_fu_264_p1 = add_ln885_fu_258_p2;

assign zext_ln70_4_fu_268_p1 = add_ln885_fu_258_p2;

assign zext_ln70_5_fu_342_p1 = select_ln27_fu_250_p3;

assign zext_ln70_6_fu_346_p1 = select_ln27_fu_250_p3;

assign zext_ln70_7_fu_362_p1 = add_ln70_2_fu_356_p2;

assign zext_ln70_8_fu_316_p1 = shl_ln70_2_mid1_fu_308_p3;

assign zext_ln70_fu_175_p1 = ap_sig_allocacmp_krow_V_1;

endmodule //axil_conv2D0_axil_conv2D0_Pipeline_loop_k1_loop_k2
